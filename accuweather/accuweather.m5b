{"category":"accuweather","color":"#ffe100","blocks":["__accuweather_init","__accuweather_readTemperature","__accuweather_readWeatherText","__accuweather_readWeatherIcon","__accuweather_readIsDayTime","__accuweather_readObserwationTime","__accuweather_readObserwationDate","__accuweather_refreshData"],"jscode":"// Block __accuweather_init\nvar __accuweather_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"accuweather init\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"apikey\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"apikey\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"cityid\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"cityid\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_init'] = {\n    init: function() {\n        this.jsonInit(__accuweather_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_init'] = function(block) {\n    var apikey = Blockly.Python.valueToCode(block, 'apikey', Blockly.Python.ORDER_NONE);\nvar cityid = Blockly.Python.valueToCode(block, 'cityid', Blockly.Python.ORDER_NONE);\n    return `\nclass accuweat:\n  import urequests\n  import json\n\n  data = {\"Message\":\"Set cityID and apiKey\"}\n\n  CITYID = 0\n  APIKEY = ''\n\n  def init(apikey, cityid):\n    accuweat.APIKEY = str(apikey)\n    accuweat.CITYID= cityid\n\n  def refreshData():\n    response = accuweat.urequests.get('http://dataservice.accuweather.com/currentconditions/v1/' + str(accuweat.CITYID) + '?apikey=' +str(accuweat.APIKEY))\n    accuweat.data = accuweat.json.loads(response.text.replace('[','').replace(']',''))\n\n  def readTemperature():\n    if 'Temperature' in accuweat.data:\n      return (accuweat.data[\"Temperature\"][\"Metric\"][\"Value\"])\n    else:\n      return (accuweat.data[\"Message\"])\n\n  def readWeatherText():\n    if 'WeatherText' in accuweat.data:\n      return (accuweat.data[\"WeatherText\"])\n    else:\n      return (accuweat.data[\"Message\"])\n\n  def readWeatherIcon():\n    if 'WeatherIcon' in accuweat.data:\n      return (accuweat.data[\"WeatherIcon\"])\n    else:\n      return (accuweat.data[\"Message\"])\n\n  def readIsDayTime():\n    if 'IsDayTime' in accuweat.data:\n      return (accuweat.data[\"IsDayTime\"])\n    else:\n      return (accuweat.data[\"Message\"]) \n\n  def readLocalObserwationDate():\n    if 'LocalObservationDateTime' in accuweat.data:\n      return (accuweat.data[\"LocalObservationDateTime\"][0:10])\n    else:\n      return (accuweat.data[\"Message\"])\n\n  def readLocalObserwationTime():\n    if 'LocalObservationDateTime' in accuweat.data:\n      return (accuweat.data[\"LocalObservationDateTime\"][11:19])\n    else:\n      return (accuweat.data[\"Message\"])\n\naccuweat.init(${apikey}, ${cityid})` + \"\\n\";\n};\n\n// Block __accuweather_readTemperature\nvar __accuweather_readTemperature_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"read temperature\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_readTemperature'] = {\n    init: function() {\n        this.jsonInit(__accuweather_readTemperature_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_readTemperature'] = function(block) {\n        return [`accuweat.readTemperature()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __accuweather_readWeatherText\nvar __accuweather_readWeatherText_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"weather text\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_readWeatherText'] = {\n    init: function() {\n        this.jsonInit(__accuweather_readWeatherText_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_readWeatherText'] = function(block) {\n        return [`accuweat.readWeatherText()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __accuweather_readWeatherIcon\nvar __accuweather_readWeatherIcon_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"weather icon\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_readWeatherIcon'] = {\n    init: function() {\n        this.jsonInit(__accuweather_readWeatherIcon_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_readWeatherIcon'] = function(block) {\n        return [`accuweat.readWeatherIcon()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __accuweather_readIsDayTime\nvar __accuweather_readIsDayTime_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"is day time\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_readIsDayTime'] = {\n    init: function() {\n        this.jsonInit(__accuweather_readIsDayTime_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_readIsDayTime'] = function(block) {\n        return [`accuweat.readIsDayTime()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __accuweather_readObserwationTime\nvar __accuweather_readObserwationTime_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"obserwation time\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_readObserwationTime'] = {\n    init: function() {\n        this.jsonInit(__accuweather_readObserwationTime_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_readObserwationTime'] = function(block) {\n        return [`accuweat.readLocalObserwationTime()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __accuweather_readObserwationDate\nvar __accuweather_readObserwationDate_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"obserwation date\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_readObserwationDate'] = {\n    init: function() {\n        this.jsonInit(__accuweather_readObserwationDate_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_readObserwationDate'] = function(block) {\n        return [`accuweat.readLocalObserwationDate()`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __accuweather_refreshData\nvar __accuweather_refreshData_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"refresh data\"\n        }\n    ],\n    \"colour\": \"#ffe100\"\n};\n\nwindow['Blockly'].Blocks['__accuweather_refreshData'] = {\n    init: function() {\n        this.jsonInit(__accuweather_refreshData_json);\n    }\n};\n\nwindow['Blockly'].Python['__accuweather_refreshData'] = function(block) {\n        return `accuweat.refreshData()` + \"\\n\";\n};\n\n"}