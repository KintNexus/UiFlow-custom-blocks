{"category":"battery","color":"#ff8c00","blocks":["__battery_initBatCapacity","__battery_getBatCapacity"],"jscode":"// Block __battery_initBatCapacity\nvar __battery_initBatCapacity_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"battery init\"\n        }\n    ],\n    \"colour\": \"#ff8c00\"\n};\n\nwindow['Blockly'].Blocks['__battery_initBatCapacity'] = {\n    init: function() {\n        this.jsonInit(__battery_initBatCapacity_json);\n    }\n};\n\nwindow['Blockly'].Python['__battery_initBatCapacity'] = function(block) {\n        return `def getBatCapacity():\n  volt = axp.getBatVoltage()\n  if volt < 3.20: return -1\n  if volt < 3.27: return 0\n  if volt < 3.61: return 5\n  if volt < 3.69: return 10\n  if volt < 3.71: return 15\n  if volt < 3.73: return 20\n  if volt < 3.75: return 25\n  if volt < 3.77: return 30\n  if volt < 3.79: return 35\n  if volt < 3.80: return 40\n  if volt < 3.82: return 45\n  if volt < 3.84: return 50\n  if volt < 3.85: return 55\n  if volt < 3.87: return 60\n  if volt < 3.91: return 65\n  if volt < 3.95: return 70\n  if volt < 3.98: return 75\n  if volt < 4.02: return 80\n  if volt < 4.08: return 85\n  if volt < 4.11: return 90\n  if volt < 4.15: return 95\n  if volt < 4.20: return 100\n  if volt >= 4.20: return 101\n` + \"\\n\";\n};\n\n// Block __battery_getBatCapacity\nvar __battery_getBatCapacity_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"battery capacity\"\n        }\n    ],\n    \"colour\": \"#ff8c00\"\n};\n\nwindow['Blockly'].Blocks['__battery_getBatCapacity'] = {\n    init: function() {\n        this.jsonInit(__battery_getBatCapacity_json);\n    }\n};\n\nwindow['Blockly'].Python['__battery_getBatCapacity'] = function(block) {\n        return [`getBatCapacity()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n"}