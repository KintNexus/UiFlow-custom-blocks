{"category":"adafruit_time","color":"#b94dc2","blocks":["__adafruit_time_init","__adafruit_time_refresh","__adafruit_time_synchronize","__adafruit_time_year","__adafruit_time_month","__adafruit_time_day","__adafruit_time_hour","__adafruit_time_minute","__adafruit_time_second","__adafruit_time_dayofweek","__adafruit_time_dayofyear","__adafruit_time_isdst"],"jscode":"// Block __adafruit_time_init\nvar __adafruit_time_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"time service init\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"username\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"username\"\n        }\n    ],\n    \"message2\": \"%1 %2\",\n    \"args2\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"aiokey\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"aiokey\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_init'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_init'] = function(block) {\n    var username = Blockly.Python.valueToCode(block, 'username', Blockly.Python.ORDER_NONE);\nvar aiokey = Blockly.Python.valueToCode(block, 'aiokey', Blockly.Python.ORDER_NONE);\n    return `class adafruitTime:\n\n  import urequests\n  import json\n\n  data = {\"error\":\"Set username and aio key first\"}\n  USERNAME = ''\n  AIOKEY = ''\n\n  def init(user, key):\n    adafruitTime.USERNAME = user\n    adafruitTime.AIOKEY = key\n\n  def refreshTime():\n    headers = {\"X-AIO-Key\":adafruitTime.AIOKEY}\n    url =\"https://io.adafruit.com/api/v2/\" + str(adafruitTime.USERNAME) + \"/integrations/time/struct\"\n    response = adafruitTime.urequests.get(url, headers=headers)\n    adafruitTime.data = adafruitTime.json.loads(response.text)\n\n  def getYear():\n    if 'year' in adafruitTime.data:\n      return(adafruitTime.data[\"year\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getMonth():\n    if 'mon' in adafruitTime.data:\n      return(adafruitTime.data[\"mon\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getDay():\n    if 'mday' in adafruitTime.data:\n      return(adafruitTime.data[\"mday\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getHour():\n    if 'hour' in adafruitTime.data:\n      return(adafruitTime.data[\"hour\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getMinute():\n    if 'min' in adafruitTime.data:\n      return(adafruitTime.data[\"min\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getSecond():\n    if 'sec' in adafruitTime.data:\n      return(adafruitTime.data[\"sec\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getDayOfWeek():\n    if 'wday' in adafruitTime.data:\n      return(adafruitTime.data[\"wday\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getDayOfYear():\n    if 'yday' in adafruitTime.data:\n      return(adafruitTime.data[\"yday\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\n  def getIsDaySavingTime():\n    if 'isdst' in adafruitTime.data:\n      return(adafruitTime.data[\"isdst\"])\n    else:\n      return(adafruitTime.data[\"error\"])\n\nadafruitTime.init( ${username}, ${aiokey} )\n` + \"\\n\";\n};\n\n// Block __adafruit_time_refresh\nvar __adafruit_time_refresh_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"get actual time\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_refresh'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_refresh_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_refresh'] = function(block) {\n        return `adafruitTime.refreshTime()\n` + \"\\n\";\n};\n\n// Block __adafruit_time_synchronize\nvar __adafruit_time_synchronize_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"synchronize rtc clock\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_synchronize'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_synchronize_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_synchronize'] = function(block) {\n        return `adafruitTime.refreshTime()\ntry:\n  rtc.setTime( adafruitTime.getYear(), adafruitTime.getMonth(), adafruitTime.getDay(), adafruitTime.getHour(), adafruitTime.getMinute(), adafruitTime.getSecond() )\nexcept:\n  pass\n` + \"\\n\";\n};\n\n// Block __adafruit_time_year\nvar __adafruit_time_year_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Year\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_year'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_year_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_year'] = function(block) {\n        return [`adafruitTime.getYear()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_month\nvar __adafruit_time_month_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Month\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_month'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_month_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_month'] = function(block) {\n        return [`adafruitTime.getMonth()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_day\nvar __adafruit_time_day_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Day\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_day'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_day_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_day'] = function(block) {\n        return [`adafruitTime.getDay()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_hour\nvar __adafruit_time_hour_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Hour\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_hour'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_hour_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_hour'] = function(block) {\n        return [`adafruitTime.getHour()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_minute\nvar __adafruit_time_minute_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Minute\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_minute'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_minute_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_minute'] = function(block) {\n        return [`adafruitTime.getMinute()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_second\nvar __adafruit_time_second_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Second\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_second'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_second_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_second'] = function(block) {\n        return [`adafruitTime.getSecond()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_dayofweek\nvar __adafruit_time_dayofweek_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Day of week\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_dayofweek'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_dayofweek_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_dayofweek'] = function(block) {\n        return [`adafruitTime.getDayOfWeek()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_dayofyear\nvar __adafruit_time_dayofyear_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Day of year\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_dayofyear'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_dayofyear_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_dayofyear'] = function(block) {\n        return [`adafruitTime.getDayOfYear()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n// Block __adafruit_time_isdst\nvar __adafruit_time_isdst_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"Is day saving time\"\n        }\n    ],\n    \"colour\": \"#b94dc2\"\n};\n\nwindow['Blockly'].Blocks['__adafruit_time_isdst'] = {\n    init: function() {\n        this.jsonInit(__adafruit_time_isdst_json);\n    }\n};\n\nwindow['Blockly'].Python['__adafruit_time_isdst'] = function(block) {\n        return [`adafruitTime.getIsDaySavingTime()\n`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n"}